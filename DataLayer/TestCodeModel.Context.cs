//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseEntities : DbContext
    {
        public DatabaseEntities()
            : base("name=DatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employee { get; set; }
    
        public virtual int SP_Employee_Delete(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employee_Delete", employeeIDParameter);
        }
    
        public virtual ObjectResult<Employee> Sp_Employee_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("Sp_Employee_GetAll");
        }
    
        public virtual ObjectResult<Employee> Sp_Employee_GetAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("Sp_Employee_GetAll", mergeOption);
        }
    
        public virtual ObjectResult<Employee> Sp_Employee_GetByLastName(string employeeLastName)
        {
            var employeeLastNameParameter = employeeLastName != null ?
                new ObjectParameter("EmployeeLastName", employeeLastName) :
                new ObjectParameter("EmployeeLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("Sp_Employee_GetByLastName", employeeLastNameParameter);
        }
    
        public virtual ObjectResult<Employee> Sp_Employee_GetByLastName(string employeeLastName, MergeOption mergeOption)
        {
            var employeeLastNameParameter = employeeLastName != null ?
                new ObjectParameter("EmployeeLastName", employeeLastName) :
                new ObjectParameter("EmployeeLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("Sp_Employee_GetByLastName", mergeOption, employeeLastNameParameter);
        }
    
        public virtual ObjectResult<Employee> Sp_Employee_GetByPhone(string employeePhone)
        {
            var employeePhoneParameter = employeePhone != null ?
                new ObjectParameter("EmployeePhone", employeePhone) :
                new ObjectParameter("EmployeePhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("Sp_Employee_GetByPhone", employeePhoneParameter);
        }
    
        public virtual ObjectResult<Employee> Sp_Employee_GetByPhone(string employeePhone, MergeOption mergeOption)
        {
            var employeePhoneParameter = employeePhone != null ?
                new ObjectParameter("EmployeePhone", employeePhone) :
                new ObjectParameter("EmployeePhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee>("Sp_Employee_GetByPhone", mergeOption, employeePhoneParameter);
        }
    
        public virtual int SP_Employee_Insert(string employeeLastName, string employeeFirstName, string employeePhone, string employeeZip, Nullable<System.DateTime> hireDate)
        {
            var employeeLastNameParameter = employeeLastName != null ?
                new ObjectParameter("EmployeeLastName", employeeLastName) :
                new ObjectParameter("EmployeeLastName", typeof(string));
    
            var employeeFirstNameParameter = employeeFirstName != null ?
                new ObjectParameter("EmployeeFirstName", employeeFirstName) :
                new ObjectParameter("EmployeeFirstName", typeof(string));
    
            var employeePhoneParameter = employeePhone != null ?
                new ObjectParameter("EmployeePhone", employeePhone) :
                new ObjectParameter("EmployeePhone", typeof(string));
    
            var employeeZipParameter = employeeZip != null ?
                new ObjectParameter("EmployeeZip", employeeZip) :
                new ObjectParameter("EmployeeZip", typeof(string));
    
            var hireDateParameter = hireDate.HasValue ?
                new ObjectParameter("HireDate", hireDate) :
                new ObjectParameter("HireDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employee_Insert", employeeLastNameParameter, employeeFirstNameParameter, employeePhoneParameter, employeeZipParameter, hireDateParameter);
        }
    
        public virtual int SP_Employee_Update(Nullable<int> employeeID, string employeeLastName, string employeeFirstName, string employeePhone, string employeeZip, Nullable<System.DateTime> hireDate)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var employeeLastNameParameter = employeeLastName != null ?
                new ObjectParameter("EmployeeLastName", employeeLastName) :
                new ObjectParameter("EmployeeLastName", typeof(string));
    
            var employeeFirstNameParameter = employeeFirstName != null ?
                new ObjectParameter("EmployeeFirstName", employeeFirstName) :
                new ObjectParameter("EmployeeFirstName", typeof(string));
    
            var employeePhoneParameter = employeePhone != null ?
                new ObjectParameter("EmployeePhone", employeePhone) :
                new ObjectParameter("EmployeePhone", typeof(string));
    
            var employeeZipParameter = employeeZip != null ?
                new ObjectParameter("EmployeeZip", employeeZip) :
                new ObjectParameter("EmployeeZip", typeof(string));
    
            var hireDateParameter = hireDate.HasValue ?
                new ObjectParameter("HireDate", hireDate) :
                new ObjectParameter("HireDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Employee_Update", employeeIDParameter, employeeLastNameParameter, employeeFirstNameParameter, employeePhoneParameter, employeeZipParameter, hireDateParameter);
        }
    }
}
